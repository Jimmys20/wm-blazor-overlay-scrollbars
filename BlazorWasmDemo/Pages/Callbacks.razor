@page "/callbacks"

<div>

    <h1>Callbacks Demo</h1>

    <br><hr><br>

    <BlazorOverlayScrollbars
        @ref="theOverlay"
        Configurations="configurations"
        ProjectName="BlazorWasmDemo"
        CallbackOnInitialized="MyOnInitialized"
        CallbackOnInitializationWithdrawn="MyOnInitializationWithdrawn"
        CallbackOnDestroyed="MyOnDestroyed"
        CallbackOnScrollStart="MyOnScrollStart"
        CallbackOnScroll="MyOnScroll"
        CallbackOnScrollStop="MyOnScrollStop"
        CallbackOnContentSizeChanged="MyOnContentSizeChanged"
        CallbackOnHostSizeChanged="MyOnHostSizeChanged"
        CallbackOnUpdated="MyOnUpdated">
        <BlazorOverlayScrollbarsContent>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita cupiditate earum quia consequatur, minus facere, sit, illum ad nesciunt unde dolorum eveniet molestiae molestias dolore a commodi possimus magnam debitis quisquam rem nostrum cumque labore saepe! Quae voluptatibus, saepe eligendi similique dolorum minus ea ipsum vel, aliquam aperiam quam porro a, perspiciatis velit nam necessitatibus! Ullam reiciendis asperiores omnis, quis, dignissimos provident incidunt aut, saepe vitae sit optio! Obcaecati esse est ratione temporibus dicta blanditiis fuga quibusdam asperiores accusantium ullam mollitia tempora, aliquam quae doloribus, pariatur vitae magni dolor, quia molestias expedita. Blanditiis suscipit repudiandae ad velit unde, eum dicta!</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita cupiditate earum quia consequatur, minus facere, sit, illum ad nesciunt unde dolorum eveniet molestiae molestias dolore a commodi possimus magnam debitis quisquam rem nostrum cumque labore saepe! Quae voluptatibus, saepe eligendi similique dolorum minus ea ipsum vel, aliquam aperiam quam porro a, perspiciatis velit nam necessitatibus! Ullam reiciendis asperiores omnis, quis, dignissimos provident incidunt aut, saepe vitae sit optio! Obcaecati esse est ratione temporibus dicta blanditiis fuga quibusdam asperiores accusantium ullam mollitia tempora, aliquam quae doloribus, pariatur vitae magni dolor, quia molestias expedita. Blanditiis suscipit repudiandae ad velit unde, eum dicta!</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita cupiditate earum quia consequatur, minus facere, sit, illum ad nesciunt unde dolorum eveniet molestiae molestias dolore a commodi possimus magnam debitis quisquam rem nostrum cumque labore saepe! Quae voluptatibus, saepe eligendi similique dolorum minus ea ipsum vel, aliquam aperiam quam porro a, perspiciatis velit nam necessitatibus! Ullam reiciendis asperiores omnis, quis, dignissimos provident incidunt aut, saepe vitae sit optio! Obcaecati esse est ratione temporibus dicta blanditiis fuga quibusdam asperiores accusantium ullam mollitia tempora, aliquam quae doloribus, pariatur vitae magni dolor, quia molestias expedita. Blanditiis suscipit repudiandae ad velit unde, eum dicta!</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita cupiditate earum quia consequatur, minus facere, sit, illum ad nesciunt unde dolorum eveniet molestiae molestias dolore a commodi possimus magnam debitis quisquam rem nostrum cumque labore saepe! Quae voluptatibus, saepe eligendi similique dolorum minus ea ipsum vel, aliquam aperiam quam porro a, perspiciatis velit nam necessitatibus! Ullam reiciendis asperiores omnis, quis, dignissimos provident incidunt aut, saepe vitae sit optio! Obcaecati esse est ratione temporibus dicta blanditiis fuga quibusdam asperiores accusantium ullam mollitia tempora, aliquam quae doloribus, pariatur vitae magni dolor, quia molestias expedita. Blanditiis suscipit repudiandae ad velit unde, eum dicta!</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita cupiditate earum quia consequatur, minus facere, sit, illum ad nesciunt unde dolorum eveniet molestiae molestias dolore a commodi possimus magnam debitis quisquam rem nostrum cumque labore saepe! Quae voluptatibus, saepe eligendi similique dolorum minus ea ipsum vel, aliquam aperiam quam porro a, perspiciatis velit nam necessitatibus! Ullam reiciendis asperiores omnis, quis, dignissimos provident incidunt aut, saepe vitae sit optio! Obcaecati esse est ratione temporibus dicta blanditiis fuga quibusdam asperiores accusantium ullam mollitia tempora, aliquam quae doloribus, pariatur vitae magni dolor, quia molestias expedita. Blanditiis suscipit repudiandae ad velit unde, eum dicta!</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita cupiditate earum quia consequatur, minus facere, sit, illum ad nesciunt unde dolorum eveniet molestiae molestias dolore a commodi possimus magnam debitis quisquam rem nostrum cumque labore saepe! Quae voluptatibus, saepe eligendi similique dolorum minus ea ipsum vel, aliquam aperiam quam porro a, perspiciatis velit nam necessitatibus! Ullam reiciendis asperiores omnis, quis, dignissimos provident incidunt aut, saepe vitae sit optio! Obcaecati esse est ratione temporibus dicta blanditiis fuga quibusdam asperiores accusantium ullam mollitia tempora, aliquam quae doloribus, pariatur vitae magni dolor, quia molestias expedita. Blanditiis suscipit repudiandae ad velit unde, eum dicta!</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita cupiditate earum quia consequatur, minus facere, sit, illum ad nesciunt unde dolorum eveniet molestiae molestias dolore a commodi possimus magnam debitis quisquam rem nostrum cumque labore saepe! Quae voluptatibus, saepe eligendi similique dolorum minus ea ipsum vel, aliquam aperiam quam porro a, perspiciatis velit nam necessitatibus! Ullam reiciendis asperiores omnis, quis, dignissimos provident incidunt aut, saepe vitae sit optio! Obcaecati esse est ratione temporibus dicta blanditiis fuga quibusdam asperiores accusantium ullam mollitia tempora, aliquam quae doloribus, pariatur vitae magni dolor, quia molestias expedita. Blanditiis suscipit repudiandae ad velit unde, eum dicta!</p>
        </BlazorOverlayScrollbarsContent>
        <BlazorOverlayScrollbarsLoading>
            <b>Loading...</b>
        </BlazorOverlayScrollbarsLoading>
    </BlazorOverlayScrollbars>

    <br><hr><br>

    <div class="reports">
        <h4>Callbacks counter:</h4>
        <ul>
            <li>CallbackOnInitialized: <b>@counterOnInitialized</b></li>
            <li>CallbackOnInitializationWithdrawn: <b>@counterOnInitializationWithdrawn</b></li>
            <li>CallbackOnDestroyed: <b>@counterOnDestroyed</b></li>
            <li>CallbackOnScrollStart: <b>@counterOnScrollStart</b></li>
            <li>CallbackOnScroll: <b>@counterOnScroll</b></li>
            <li>CallbackOnScrollStop: <b>@counterOnScrollStop</b></li>
            <li>CallbackOnContentSizeChanged: <b>@counterOnContentSizeChanged</b></li>
            <li>CallbackOnHostSizeChanged: <b>@counterOnHostSizeChanged</b></li>
            <li>CallbackOnUpdated: <b>@counterOnUpdated</b></li>
        </ul>
    </div>

    <br><hr><br>

    <div>
        <button class="btn btn-primary btn-sm" @onclick="@(e => SampleDestroy())">Destroy</button>
        <button class="btn btn-primary btn-sm" @onclick="@(e => SampleConstroy())">Constroy</button>
        <button class="btn btn-primary btn-sm" @onclick="@(e => SampleUpdate())">Update</button>
        <button class="btn btn-primary btn-sm" @onclick="@(e => SampleScroll(null, "50%"))">Scroll to X 50%</button>
        <button class="btn btn-primary btn-sm" @onclick="@(e => SampleScroll(0, 0))">Scroll to X 0</button>
        <button class="btn btn-primary btn-sm" @onclick="@(e => SampleSleep())">Sleep</button>
        <button class="btn btn-primary btn-sm" @onclick="@(e => SampleScrollStop())">Scroll Stop</button>
    </div>

    <br><br><br>

</div>

@code {
    public BlazorOverlayScrollbars theOverlay;
    public WMBOSConfigurations configurations;
    public bool showAll = false;
    public static int counterOnInitialized = 0;
    public static int counterOnInitializationWithdrawn = 0;
    public static int counterOnDestroyed = 0;
    public static int counterOnScrollStart = 0;
    public static int counterOnScroll = 0;
    public static int counterOnScrollStop = 0;
    public static int counterOnContentSizeChanged = 0;
    public static int counterOnHostSizeChanged = 0;
    public static int counterOnUpdated= 0;
    private static Action updateState;

    protected override void OnInitialized()
    {
        updateState = SampleUpdateState;
        configurations = new WMBOSConfigurations {
            resize = "both"
        };
    }

    protected void SampleUpdateState()
    {
        StateHasChanged();
    }

    public async void SampleConstroy() 
    {
        await theOverlay.Constroy();
    }

    public async void SampleDestroy() 
    {
        await theOverlay.Destroy();
    }

    public async void SampleUpdate() 
    {
        await theOverlay.Update(true);
    }

    public async void SampleScroll(string x, string y) 
    {
        await theOverlay.Scroll(x, y);
    }

    public async void SampleScroll(int x, int y) 
    {
        await theOverlay.Scroll(x, y);
    }

    public async void SampleSleep() 
    {
        await theOverlay.Sleep();
    }

    public async void SampleScrollStop() 
    {
        await theOverlay.ScrollStop();
    }

    public void ToggleContentSize() {
        showAll = !showAll;
    }

    [JSInvokable]
    public static void MyOnInitialized()
    {
        counterOnInitialized++;
        updateState.Invoke();
    }

    [JSInvokable]
    public static void MyOnInitializationWithdrawn()
    {
        counterOnInitializationWithdrawn++;
        updateState.Invoke();
    }

    [JSInvokable]
    public static void MyOnDestroyed()
    {
        counterOnDestroyed++;
        updateState.Invoke();
    }

    [JSInvokable]
    public static void MyOnScrollStart()
    {
        counterOnScrollStart++;
        updateState.Invoke();
    }

    [JSInvokable]
    public static void MyOnScroll()
    {
        counterOnScroll++;
        updateState.Invoke();
    }

    [JSInvokable]
    public static void MyOnScrollStop()
    {
        counterOnScrollStop++;
        updateState.Invoke();
    }

    [JSInvokable]
    public static void MyOnContentSizeChanged()
    {
        counterOnContentSizeChanged++;
        updateState.Invoke();
    }

    [JSInvokable]
    public static void MyOnHostSizeChanged()
    {
        counterOnHostSizeChanged++;
        updateState.Invoke();
    }

    [JSInvokable]
    public static void MyOnUpdated()
    {
        counterOnUpdated++;
        updateState.Invoke();
    }
}
